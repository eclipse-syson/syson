name: Generate NPM SBOM

on:
  push:
    branches: 
      - "main"
    paths:
      - "package.json"
      - "package-lock.json"
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        default: 'main'
        required: true

env:
  NODE_VERSION: '18.7'
  REGISTRY_URL: 'https://npm.pkg.github.com/'
  PRODUCT_PATH: './'

permissions:
  contents: read

jobs:
  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    outputs:
      project-version: ${{ steps.version.outputs.PROJECT_VERSION }}
    permissions:
      packages: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.version }}

      - name: Setup Node SDK
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "CI=true" >> $GITHUB_ENV
          npm ci

      - name: Install cyclonedx-npm
        run: |
          npm install --global @cyclonedx/cyclonedx-npm

      - name: Generate SBOM
        run: |
          cyclonedx-npm --output-format json --output-file bom.json

      - name: Extract version
        id: version
        run: |
          event="${{ github.event_name }}"
          ref="${{ github.ref }}"
          input="${{ github.event.inputs.version }}"

          VERSION="$(jq -r '.metadata.component.version' < ./${{ env.PRODUCT_PATH }}/bom.json)"

          if [[ "$event" == "push" && "$ref" == refs/heads/* ]] || \
            [[ "$event" == "workflow_dispatch" && ! "$input" =~ ^v ]]; then
            VERSION="${VERSION}@dev"
          fi

          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: frontend-sbom
          path: ${{ env.PRODUCT_PATH }}/bom.json

  store-sbom-data: # stores sbom and metadata in a predefined format for otterdog to pick up
    needs: ['generate-sbom']
    uses: eclipse-csi/workflows/.github/workflows/store-sbom-data.yml@main
    with:
      projectName: 'frontend'
      projectVersion: ${{ needs.generate-sbom.outputs.project-version }}
      bomArtifact: 'frontend-sbom'
      bomFilename: 'bom.json'
      parentProject: '1b099ee7-62ee-48e1-986b-b7f0309dd344'
